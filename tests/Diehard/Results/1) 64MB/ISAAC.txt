       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for ISAAC.32       
                   For a sample of size 500:     mean   
           ISAAC.32        using bits  1 to 24   1.998
  duplicate       number       number 
  spacings       observed     expected
        0          60.       67.668
        1         136.      135.335
        2         140.      135.335
        3         102.       90.224
        4          41.       45.112
        5          14.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     4.05 p-value=  .330063
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ISAAC.32        using bits  2 to 25   1.996
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         134.      135.335
        2         130.      135.335
        3          92.       90.224
        4          49.       45.112
        5          14.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     2.02 p-value=  .082225
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ISAAC.32        using bits  3 to 26   2.022
  duplicate       number       number 
  spacings       observed     expected
        0          72.       67.668
        1         121.      135.335
        2         133.      135.335
        3          99.       90.224
        4          49.       45.112
        5          25.       18.045
  6 to INF          1.        8.282
 Chisquare with  6 d.o.f. =    12.11 p-value=  .940407
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ISAAC.32        using bits  4 to 27   2.002
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         137.      135.335
        2         127.      135.335
        3          91.       90.224
        4          51.       45.112
        5          19.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     2.01 p-value=  .081648
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ISAAC.32        using bits  5 to 28   2.062
  duplicate       number       number 
  spacings       observed     expected
        0          58.       67.668
        1         133.      135.335
        2         143.      135.335
        3          95.       90.224
        4          41.       45.112
        5          21.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     3.03 p-value=  .194868
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ISAAC.32        using bits  6 to 29   1.896
  duplicate       number       number 
  spacings       observed     expected
        0          67.       67.668
        1         159.      135.335
        2         127.      135.335
        3          79.       90.224
        4          47.       45.112
        5          17.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     8.41 p-value=  .790252
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ISAAC.32        using bits  7 to 30   2.004
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         140.      135.335
        2         111.      135.335
        3         113.       90.224
        4          43.       45.112
        5          16.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =    10.65 p-value=  .900282
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ISAAC.32        using bits  8 to 31   2.022
  duplicate       number       number 
  spacings       observed     expected
        0          68.       67.668
        1         138.      135.335
        2         125.      135.335
        3          89.       90.224
        4          55.       45.112
        5          17.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     3.10 p-value=  .203486
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ISAAC.32        using bits  9 to 32   1.966
  duplicate       number       number 
  spacings       observed     expected
        0          62.       67.668
        1         150.      135.335
        2         135.      135.335
        3          88.       90.224
        4          35.       45.112
        5          23.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     5.95 p-value=  .570631
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .330063   .082225   .940407   .081648   .194868
        .790252   .900282   .203486   .570631
  A KSTEST for the 9 p-values yields  .338790

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file ISAAC.32       
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 80.570; p-value= .087983
           OPERM5 test for file ISAAC.32       
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=164.844; p-value= .999962
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for ISAAC.32       
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       204     211.4   .260276     .260
        29      5060    5134.0  1.066908    1.327
        30     23029   23103.0   .237325    1.565
        31     11707   11551.5  2.092595    3.657
  chisquare= 3.657 for 3 d. of f.; p-value= .726965
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for ISAAC.32       
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       207     211.4   .092324     .092
        30      5019    5134.0  2.576418    2.669
        31     23195   23103.0   .365985    3.035
        32     11579   11551.5   .065351    3.100
  chisquare= 3.100 for 3 d. of f.; p-value= .662694
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for ISAAC.32       
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          933       944.3        .135        .135
          r =5        21570     21743.9       1.391       1.526
          r =6        77497     77311.8        .444       1.970
                        p=1-exp(-SUM/2)= .62650
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          967       944.3        .546        .546
          r =5        21569     21743.9       1.407       1.952
          r =6        77464     77311.8        .300       2.252
                        p=1-exp(-SUM/2)= .67568
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          945       944.3        .001        .001
          r =5        21657     21743.9        .347        .348
          r =6        77398     77311.8        .096        .444
                        p=1-exp(-SUM/2)= .19905
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          975       944.3        .998        .998
          r =5        21909     21743.9       1.254       2.252
          r =6        77116     77311.8        .496       2.747
                        p=1-exp(-SUM/2)= .74684
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          995       944.3       2.722       2.722
          r =5        21905     21743.9       1.194       3.916
          r =6        77100     77311.8        .580       4.496
                        p=1-exp(-SUM/2)= .89438
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          958       944.3        .199        .199
          r =5        21876     21743.9        .803       1.001
          r =6        77166     77311.8        .275       1.276
                        p=1-exp(-SUM/2)= .47172
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          936       944.3        .073        .073
          r =5        21862     21743.9        .641        .714
          r =6        77202     77311.8        .156        .870
                        p=1-exp(-SUM/2)= .35286
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          945       944.3        .001        .001
          r =5        21701     21743.9        .085        .085
          r =6        77354     77311.8        .023        .108
                        p=1-exp(-SUM/2)= .05266
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          981       944.3       1.426       1.426
          r =5        21684     21743.9        .165       1.591
          r =6        77335     77311.8        .007       1.598
                        p=1-exp(-SUM/2)= .55027
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          970       944.3        .699        .699
          r =5        21894     21743.9       1.036       1.736
          r =6        77136     77311.8        .400       2.135
                        p=1-exp(-SUM/2)= .65618
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1013       944.3       4.998       4.998
          r =5        21724     21743.9        .018       5.016
          r =6        77263     77311.8        .031       5.047
                        p=1-exp(-SUM/2)= .91982
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          959       944.3        .229        .229
          r =5        22002     21743.9       3.064       3.292
          r =6        77039     77311.8        .963       4.255
                        p=1-exp(-SUM/2)= .88087
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          926       944.3        .355        .355
          r =5        21825     21743.9        .302        .657
          r =6        77249     77311.8        .051        .708
                        p=1-exp(-SUM/2)= .29819
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          910       944.3       1.246       1.246
          r =5        21750     21743.9        .002       1.248
          r =6        77340     77311.8        .010       1.258
                        p=1-exp(-SUM/2)= .46687
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          936       944.3        .073        .073
          r =5        21830     21743.9        .341        .414
          r =6        77234     77311.8        .078        .492
                        p=1-exp(-SUM/2)= .21816
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          934       944.3        .112        .112
          r =5        21744     21743.9        .000        .112
          r =6        77322     77311.8        .001        .114
                        p=1-exp(-SUM/2)= .05527
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          953       944.3        .080        .080
          r =5        21581     21743.9       1.220       1.301
          r =6        77466     77311.8        .308       1.608
                        p=1-exp(-SUM/2)= .55248
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          961       944.3        .295        .295
          r =5        21576     21743.9       1.296       1.592
          r =6        77463     77311.8        .296       1.887
                        p=1-exp(-SUM/2)= .61083
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          927       944.3        .317        .317
          r =5        21638     21743.9        .516        .833
          r =6        77435     77311.8        .196       1.029
                        p=1-exp(-SUM/2)= .40222
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          961       944.3        .295        .295
          r =5        21751     21743.9        .002        .298
          r =6        77288     77311.8        .007        .305
                        p=1-exp(-SUM/2)= .14142
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1020       944.3       6.068       6.068
          r =5        21542     21743.9       1.875       7.943
          r =6        77438     77311.8        .206       8.149
                        p=1-exp(-SUM/2)= .98300
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          969       944.3        .646        .646
          r =5        22011     21743.9       3.281       3.927
          r =6        77020     77311.8       1.101       5.028
                        p=1-exp(-SUM/2)= .91907
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          960       944.3        .261        .261
          r =5        22098     21743.9       5.767       6.028
          r =6        76942     77311.8       1.769       7.796
                        p=1-exp(-SUM/2)= .97972
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          982       944.3       1.505       1.505
          r =5        21791     21743.9        .102       1.607
          r =6        77227     77311.8        .093       1.700
                        p=1-exp(-SUM/2)= .57260
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ISAAC.32       
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          995       944.3       2.722       2.722
          r =5        21772     21743.9        .036       2.758
          r =6        77233     77311.8        .080       2.839
                        p=1-exp(-SUM/2)= .75812
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .626499     .675684     .199052     .746843     .894380
     .471715     .352857     .052657     .550269     .656185
     .919818     .880869     .298193     .466867     .218158
     .055274     .552483     .610827     .402222     .141417
     .982999     .919073     .979721     .572600     .758118
   brank test summary for ISAAC.32       
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .465208

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  141154 missing words,   -1.76 sigmas from mean, p-value= .03880
 tst no  2:  141998 missing words,     .21 sigmas from mean, p-value= .58206
 tst no  3:  141692 missing words,    -.51 sigmas from mean, p-value= .30581
 tst no  4:  141822 missing words,    -.20 sigmas from mean, p-value= .41916
 tst no  5:  142259 missing words,     .82 sigmas from mean, p-value= .79303
 tst no  6:  141487 missing words,    -.99 sigmas from mean, p-value= .16188
 tst no  7:  141884 missing words,    -.06 sigmas from mean, p-value= .47641
 tst no  8:  142096 missing words,     .44 sigmas from mean, p-value= .66864
 tst no  9:  140876 missing words,   -2.41 sigmas from mean, p-value= .00788
 tst no 10:  141722 missing words,    -.44 sigmas from mean, p-value= .33081
 tst no 11:  142089 missing words,     .42 sigmas from mean, p-value= .66268
 tst no 12:  142802 missing words,    2.09 sigmas from mean, p-value= .98150
 tst no 13:  142901 missing words,    2.32 sigmas from mean, p-value= .98975
 tst no 14:  141928 missing words,     .04 sigmas from mean, p-value= .51740
 tst no 15:  141212 missing words,   -1.63 sigmas from mean, p-value= .05163
 tst no 16:  141536 missing words,    -.87 sigmas from mean, p-value= .19153
 tst no 17:  142001 missing words,     .21 sigmas from mean, p-value= .58480
 tst no 18:  141649 missing words,    -.61 sigmas from mean, p-value= .27151
 tst no 19:  141697 missing words,    -.50 sigmas from mean, p-value= .30991
 tst no 20:  141070 missing words,   -1.96 sigmas from mean, p-value= .02494

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator ISAAC.32       
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for ISAAC.32        using bits 23 to 32        142021   .385  .6499
    OPSO for ISAAC.32        using bits 22 to 31        142135   .778  .7818
    OPSO for ISAAC.32        using bits 21 to 30        142178   .926  .8229
    OPSO for ISAAC.32        using bits 20 to 29        141980   .244  .5963
    OPSO for ISAAC.32        using bits 19 to 28        142025   .399  .6550
    OPSO for ISAAC.32        using bits 18 to 27        142301  1.351  .9116
    OPSO for ISAAC.32        using bits 17 to 26        141776  -.460  .3228
    OPSO for ISAAC.32        using bits 16 to 25        142056   .506  .6935
    OPSO for ISAAC.32        using bits 15 to 24        142231  1.109  .8663
    OPSO for ISAAC.32        using bits 14 to 23        141392 -1.784  .0372
    OPSO for ISAAC.32        using bits 13 to 22        141959   .171  .5680
    OPSO for ISAAC.32        using bits 12 to 21        142129   .757  .7756
    OPSO for ISAAC.32        using bits 11 to 20        142043   .461  .6776
    OPSO for ISAAC.32        using bits 10 to 19        141805  -.360  .3595
    OPSO for ISAAC.32        using bits  9 to 18        141798  -.384  .3505
    OPSO for ISAAC.32        using bits  8 to 17        142332  1.457  .9275
    OPSO for ISAAC.32        using bits  7 to 16        142112   .699  .7577
    OPSO for ISAAC.32        using bits  6 to 15        142471  1.937  .9736
    OPSO for ISAAC.32        using bits  5 to 14        142011   .351  .6371
    OPSO for ISAAC.32        using bits  4 to 13        141817  -.318  .3751
    OPSO for ISAAC.32        using bits  3 to 12        142099   .654  .7435
    OPSO for ISAAC.32        using bits  2 to 11        141841  -.236  .4069
    OPSO for ISAAC.32        using bits  1 to 10        141375 -1.843  .0327
 OQSO test for generator ISAAC.32       
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for ISAAC.32        using bits 28 to 32        142541  2.141  .9839
    OQSO for ISAAC.32        using bits 27 to 31        141776  -.452  .3256
    OQSO for ISAAC.32        using bits 26 to 30        142207  1.009  .8435
    OQSO for ISAAC.32        using bits 25 to 29        142062   .518  .6976
    OQSO for ISAAC.32        using bits 24 to 28        141828  -.276  .3914
    OQSO for ISAAC.32        using bits 23 to 27        141754  -.527  .2993
    OQSO for ISAAC.32        using bits 22 to 26        141680  -.777  .2185
    OQSO for ISAAC.32        using bits 21 to 25        141603 -1.038  .1495
    OQSO for ISAAC.32        using bits 20 to 24        141898  -.038  .4847
    OQSO for ISAAC.32        using bits 19 to 23        141211 -2.367  .0090
    OQSO for ISAAC.32        using bits 18 to 22        141990   .273  .6078
    OQSO for ISAAC.32        using bits 17 to 21        141475 -1.472  .0705
    OQSO for ISAAC.32        using bits 16 to 20        141627  -.957  .1693
    OQSO for ISAAC.32        using bits 15 to 19        142378  1.589  .9439
    OQSO for ISAAC.32        using bits 14 to 18        141738  -.581  .2807
    OQSO for ISAAC.32        using bits 13 to 17        142092   .619  .7321
    OQSO for ISAAC.32        using bits 12 to 16        142028   .402  .6563
    OQSO for ISAAC.32        using bits 11 to 15        142335  1.443  .9255
    OQSO for ISAAC.32        using bits 10 to 14        141725  -.625  .2660
    OQSO for ISAAC.32        using bits  9 to 13        142122   .721  .7645
    OQSO for ISAAC.32        using bits  8 to 12        141629  -.950  .1710
    OQSO for ISAAC.32        using bits  7 to 11        142018   .368  .6437
    OQSO for ISAAC.32        using bits  6 to 10        142053   .487  .6869
    OQSO for ISAAC.32        using bits  5 to  9        141826  -.282  .3888
    OQSO for ISAAC.32        using bits  4 to  8        141804  -.357  .3605
    OQSO for ISAAC.32        using bits  3 to  7        141460 -1.523  .0639
    OQSO for ISAAC.32        using bits  2 to  6        142154   .829  .7966
    OQSO for ISAAC.32        using bits  1 to  5        141881  -.096  .4617
  DNA test for generator ISAAC.32       
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for ISAAC.32        using bits 31 to 32        141895  -.042  .4831
     DNA for ISAAC.32        using bits 30 to 31        141849  -.178  .4294
     DNA for ISAAC.32        using bits 29 to 30        141782  -.376  .3536
     DNA for ISAAC.32        using bits 28 to 29        142174   .781  .7825
     DNA for ISAAC.32        using bits 27 to 28        141482 -1.261  .1037
     DNA for ISAAC.32        using bits 26 to 27        141914   .014  .5055
     DNA for ISAAC.32        using bits 25 to 26        142430  1.536  .9377
     DNA for ISAAC.32        using bits 24 to 25        141706  -.600  .2743
     DNA for ISAAC.32        using bits 23 to 24        142257  1.026  .8475
     DNA for ISAAC.32        using bits 22 to 23        142157   .731  .7675
     DNA for ISAAC.32        using bits 21 to 22        141303 -1.789  .0368
     DNA for ISAAC.32        using bits 20 to 21        141675  -.691  .2447
     DNA for ISAAC.32        using bits 19 to 20        142545  1.875  .9696
     DNA for ISAAC.32        using bits 18 to 19        141997   .259  .6020
     DNA for ISAAC.32        using bits 17 to 18        141899  -.030  .4878
     DNA for ISAAC.32        using bits 16 to 17        141373 -1.582  .0568
     DNA for ISAAC.32        using bits 15 to 16        141104 -2.376  .0088
     DNA for ISAAC.32        using bits 14 to 15        142668  2.238  .9874
     DNA for ISAAC.32        using bits 13 to 14        141918   .026  .5102
     DNA for ISAAC.32        using bits 12 to 13        142088   .527  .7009
     DNA for ISAAC.32        using bits 11 to 12        142033   .365  .6424
     DNA for ISAAC.32        using bits 10 to 11        141955   .135  .5536
     DNA for ISAAC.32        using bits  9 to 10        141906  -.010  .4961
     DNA for ISAAC.32        using bits  8 to  9        141453 -1.346  .0891
     DNA for ISAAC.32        using bits  7 to  8        141885  -.072  .4714
     DNA for ISAAC.32        using bits  6 to  7        141874  -.104  .4585
     DNA for ISAAC.32        using bits  5 to  6        141951   .123  .5489
     DNA for ISAAC.32        using bits  4 to  5        141872  -.110  .4562
     DNA for ISAAC.32        using bits  3 to  4        141666  -.718  .2364
     DNA for ISAAC.32        using bits  2 to  3        142024   .338  .6324
     DNA for ISAAC.32        using bits  1 to  2        141939   .088  .5349

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for ISAAC.32       
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for ISAAC.32         2468.03      -.452      .325592
 byte stream for ISAAC.32         2415.11     -1.200      .114974

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2570.22       .993      .839667
           bits  2 to  9  2496.91      -.044      .482574
           bits  3 to 10  2625.85      1.780      .962447
           bits  4 to 11  2419.44     -1.139      .127276
           bits  5 to 12  2433.11      -.946      .172072
           bits  6 to 13  2484.05      -.226      .410774
           bits  7 to 14  2497.72      -.032      .487166
           bits  8 to 15  2735.64      3.332      .999570
           bits  9 to 16  2592.88      1.313      .905487
           bits 10 to 17  2495.86      -.059      .476673
           bits 11 to 18  2638.05      1.952      .974551
           bits 12 to 19  2469.17      -.436      .331427
           bits 13 to 20  2486.94      -.185      .426733
           bits 14 to 21  2388.67     -1.574      .057693
           bits 15 to 22  2618.92      1.682      .953699
           bits 16 to 23  2568.27       .965      .832843
           bits 17 to 24  2442.01      -.820      .206095
           bits 18 to 25  2433.30      -.943      .172759
           bits 19 to 26  2587.88      1.243      .893021
           bits 20 to 27  2628.70      1.820      .965631
           bits 21 to 28  2517.42       .246      .597310
           bits 22 to 29  2598.26      1.390      .917680
           bits 23 to 30  2637.19      1.940      .973821
           bits 24 to 31  2512.59       .178      .570660
           bits 25 to 32  2514.82       .210      .583003

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file ISAAC.32       
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3517    z-score:  -.274 p-value: .392053
            Successes: 3514    z-score:  -.411 p-value: .340551
            Successes: 3529    z-score:   .274 p-value: .607947
            Successes: 3522    z-score:  -.046 p-value: .481790
            Successes: 3508    z-score:  -.685 p-value: .246694
            Successes: 3486    z-score: -1.689 p-value: .045562
            Successes: 3580    z-score:  2.603 p-value: .995376
            Successes: 3545    z-score:  1.005 p-value: .842447
            Successes: 3496    z-score: -1.233 p-value: .108811
            Successes: 3547    z-score:  1.096 p-value: .863437
 
           square size   avg. no.  parked   sample sigma
             100.            3524.400       25.997
            KSTEST for the above 10: p=  .095328

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file ISAAC.32       
     Sample no.    d^2     avg     equiv uni            
           5    3.2498   1.3458     .961845
          10     .9771   1.6545     .625453
          15     .9472   1.3129     .614015
          20    5.1774   1.4562     .994502
          25    2.0264   1.3634     .869520
          30     .2600   1.2847     .229940
          35    2.2054   1.2437     .891011
          40     .7973   1.2244     .551237
          45     .4746   1.2260     .379356
          50    3.0229   1.2350     .952072
          55     .3889   1.1729     .323494
          60     .6989   1.1553     .504628
          65    1.3560   1.1253     .744071
          70     .5558   1.0820     .428014
          75     .3865   1.0709     .321921
          80     .7459   1.0803     .527458
          85    2.8087   1.0977     .940564
          90    2.0274   1.1000     .869658
          95    3.4448   1.1196     .968635
         100     .6665   1.0949     .488222
     MINIMUM DISTANCE TEST for ISAAC.32       
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .729848

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file ISAAC.32       
 sample no:  1     r^3= 127.218     p-value= .98560
 sample no:  2     r^3=  57.593     p-value= .85336
 sample no:  3     r^3=  32.184     p-value= .65795
 sample no:  4     r^3=  70.680     p-value= .90520
 sample no:  5     r^3=   4.038     p-value= .12593
 sample no:  6     r^3=  27.058     p-value= .59422
 sample no:  7     r^3=  13.192     p-value= .35578
 sample no:  8     r^3=   7.649     p-value= .22505
 sample no:  9     r^3=   1.857     p-value= .06002
 sample no: 10     r^3=  55.236     p-value= .84137
 sample no: 11     r^3=    .996     p-value= .03266
 sample no: 12     r^3=   6.635     p-value= .19841
 sample no: 13     r^3=  29.504     p-value= .62599
 sample no: 14     r^3=  75.362     p-value= .91890
 sample no: 15     r^3=   5.574     p-value= .16957
 sample no: 16     r^3=   3.291     p-value= .10390
 sample no: 17     r^3=  49.633     p-value= .80880
 sample no: 18     r^3=  39.370     p-value= .73081
 sample no: 19     r^3=  38.473     p-value= .72264
 sample no: 20     r^3= 119.393     p-value= .98131
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file ISAAC.32             p-value= .663398
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR ISAAC.32       
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     -.1      .5     -.4     -.1     1.4     -.6
    -1.3     -.5    -1.6     1.5      .0      .2
     -.3     2.7     -.8      .6      .9     1.6
     -.5    -1.8    -1.6     -.9      .8      .6
    -1.0      .1      .6    -1.1    -1.4      .0
     -.1     1.2     -.7    -1.0      .8     1.7
     1.2     -.4     1.3     -.7      .1      .0
     -.1
           Chi-square with 42 degrees of freedom: 44.115
              z-score=   .231  p-value= .617795
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .296079
                Test no.  2      p-value  .846288
                Test no.  3      p-value  .017276
                Test no.  4      p-value  .019389
                Test no.  5      p-value  .727765
                Test no.  6      p-value  .374770
                Test no.  7      p-value  .913850
                Test no.  8      p-value  .450190
                Test no.  9      p-value  .065157
                Test no. 10      p-value  .775255
   Results of the OSUM test for ISAAC.32       
        KSTEST on the above 10 p-values:  .621248

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file ISAAC.32       
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for ISAAC.32       :
       runs up; ks test for 10 p's: .937519
     runs down; ks test for 10 p's: .655780
                 Run test for ISAAC.32       :
       runs up; ks test for 10 p's: .039003
     runs down; ks test for 10 p's: .901604

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for ISAAC.32       
  No. of wins:  Observed Expected
                                98358    98585.86
                  98358= No. of wins, z-score=-1.019 pvalue= .15407
   Analysis of Throws-per-Game:
 Chisq=  16.43 for 20 degrees of freedom, p=  .31066
               Throws Observed Expected  Chisq     Sum
                  1    66369    66666.7   1.329    1.329
                  2    37700    37654.3    .055    1.385
                  3    27305    26954.7   4.552    5.936
                  4    19369    19313.5    .160    6.096
                  5    13824    13851.4    .054    6.150
                  6     9928     9943.5    .024    6.174
                  7     7039     7145.0   1.573    7.748
                  8     5201     5139.1    .746    8.494
                  9     3705     3699.9    .007    8.501
                 10     2611     2666.3   1.147    9.648
                 11     1937     1923.3    .097    9.745
                 12     1408     1388.7    .267   10.012
                 13      981     1003.7    .514   10.526
                 14      746      726.1    .543   11.069
                 15      510      525.8    .477   11.546
                 16      398      381.2    .745   12.291
                 17      272      276.5    .075   12.366
                 18      184      200.8   1.410   13.776
                 19      131      146.0   1.538   15.314
                 20      111      106.2    .216   15.530
                 21      271      287.1    .905   16.434
            SUMMARY  FOR ISAAC.32       
                p-value for no. of wins: .154073
                p-value for throws/game: .310656

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file ISAAC.txt      
